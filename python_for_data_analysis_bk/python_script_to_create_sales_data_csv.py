# -*- coding: utf-8 -*-
"""Python Script to Create sales_data.csv

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cbJjW0_0KSDlLIPS_BB6YzQvniK79VRt
"""

# Import necessary libraries
import pandas as pd
import numpy as np

# --- Configuration ---
# Set a seed for reproducibility so you get the same random data each time
np.random.seed(42)

# Define the number of rows for the dataset
num_rows = 1000

# --- Data Generation ---

# Generate the 'Date' column: 1000 random dates over a year
start_date = pd.to_datetime('2024-01-01')
end_date = pd.to_datetime('2024-12-31')
date_range = pd.to_datetime(np.random.uniform(start_date.value, end_date.value, num_rows))

# Generate the 'Store' column: 10 different stores
stores = [f'Store_{i+1}' for i in range(10)]
store_data = np.random.choice(stores, num_rows)

# Generate the 'Region' column: 3 different regions
regions = ['North', 'South', 'East']
region_data = np.random.choice(regions, num_rows)

# Generate the 'Product' column: 5 different products
products = ['Laptop', 'Mouse', 'Keyboard', 'Monitor', 'Webcam']
product_data = np.random.choice(products, num_rows)

# Generate 'Units Sold' column: Random integers between 1 and 50
units_sold_data = np.random.randint(1, 51, num_rows)

# Generate 'Unit Price' column: Random floats between $50 and $1000
# The price depends on the product for more realistic data
price_map = {
    'Laptop': np.random.uniform(700, 1000),
    'Monitor': np.random.uniform(200, 400),
    'Keyboard': np.random.uniform(50, 150),
    'Mouse': np.random.uniform(20, 80),
    'Webcam': np.random.uniform(30, 100)
}
unit_price_data = [price_map[p] for p in product_data]

# Create the DataFrame
df = pd.DataFrame({
    'Date': date_range,
    'Store': store_data,
    'Region': region_data,
    'Product': product_data,
    'Units Sold': units_sold_data,
    'Unit Price': unit_price_data
})

# Calculate the 'Revenue' column: Units Sold * Unit Price
df['Revenue'] = df['Units Sold'] * df['Unit Price']

# --- Save to CSV ---

# Save the DataFrame to a CSV file. `index=False` prevents pandas from writing the DataFrame index as a column.
file_path = 'sales_data.csv'
df.to_csv(file_path, index=False)

# Print a confirmation message
print(f"Successfully created '{file_path}' with {len(df)} rows.")

# Display the first 5 rows of the DataFrame to confirm the data structure
print("\nFirst 5 rows of the generated data:")
print(df.head())